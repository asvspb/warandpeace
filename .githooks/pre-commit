#!/usr/bin/env bash
# Pre-commit hook: требует актуализации документации при изменении ключевых файлов.
# Поведение:
#  - Если изменены код/инфраструктура, хук попытается автоматически сгенерировать doc/STATUS.md
#    (python3 scripts/docs/generate_status.py) и добавить его в коммит.
#  - Если после этого ни один документ не изменён, коммит БЛОКИРУЕТСЯ (exit 1) с подсказками.
# Отключение на свой страх и риск: export WARP_DOCS_HOOK_DISABLE=1 (или git commit --no-verify)

set -euo pipefail

if [[ "${WARP_DOCS_HOOK_DISABLE:-}" == 1 ]]; then
  exit 0
fi

# Собираем список проиндексированных файлов
mapfile -t STAGED < <(git diff --cached --name-only)
[[ ${#STAGED[@]} -eq 0 ]] && exit 0

# Триггеры: изменения, которые обычно требуют обновления docs
TRIGGER_RE='^(Dockerfile|docker-compose\.yml|requirements\.txt|\.env\.example|src/|scripts/|prompts/|doc/db/|src/db/|WARP\.md)$'
# Документы, которые считаются «обновлением документации»
DOCS_RE='^(DEPLOYMENT\.md|WARP\.md|README\.md|doc/STATUS\.md|doc/PLANNING\.md|doc/ROADMAP\.md|doc/RELEASELOG\.md|doc/DOCS_GUIDE\.md|doc/[^/]+_PLAN_RU\.md)$'

triggered=()
doc_touched=false
for f in "${STAGED[@]}"; do
  if [[ "$f" =~ $TRIGGER_RE ]]; then
    triggered+=("$f")
  fi
  if [[ "$f" =~ $DOCS_RE ]]; then
    doc_touched=true
  fi
done

if [[ ${#triggered[@]} -gt 0 ]]; then
  # Пытаемся автоматически сгенерировать STATUS
  if command -v python3 >/dev/null 2>&1 && [[ -f scripts/docs/generate_status.py ]]; then
    if python3 scripts/docs/generate_status.py >/dev/null 2>&1; then
      git add doc/STATUS.md || true
      # если STATUS изменился, это уже считается обновлением docs
      if ! git diff --cached --quiet -- doc/STATUS.md; then
        doc_touched=true
      fi
    fi
  fi

  if [[ "$doc_touched" == false ]]; then
    red="\033[31m"; reset="\033[0m"; bold="\033[1m"
    echo -e "${red}${bold}docs-error:${reset} Изменены ключевые файлы, но документация не обновлена." 1>&2
    echo "  Триггеры:" 1>&2
    for f in "${triggered[@]}"; do
      echo "   - $f" 1>&2
    done
    echo "  Обновите хотя бы один из документов:" 1>&2
    echo "   - DEPLOYMENT.md / WARP.md / README.md" 1>&2
    echo "   - doc/PLANNING.md / doc/ROADMAP.md / doc/RELEASELOG.md / doc/*_PLAN_RU.md" 1>&2
    echo "  Подсказка: doc/STATUS.md можно сгенерировать: python3 scripts/docs/generate_status.py (хук делает это автоматически)." 1>&2
    echo "  Временное отключение (на свой риск): export WARP_DOCS_HOOK_DISABLE=1 или git commit --no-verify" 1>&2
    exit 1
  fi
fi

exit 0
